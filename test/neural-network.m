clcclear all#Return a row vector with the size (number of elements) of each dimension for the object a. X=zeros(5000,400);isequal(size(X),[5000,400])#When given a second argument, dim, return the size of the corresponding dimension. isequal(size(X,1),[5000],5000)#If fid is omitted, the output is written to stdout making the function exactly equivalent to printf. #The optional output returns the number of bytes written to the file. numbytes=fprintf('Visualizing data...\n');isequal(numbytes,length(strrep('Visualizing data...\n','\','')),20)#Return a row vector containing a random permutation of 1:nrandom_digits_indices=randperm(size(X,1));isequal( numel(random_digits_indices),5000)B=random_digits_indices<5000;isequal(length(random_digits_indices(random_digits_indices<5000)),length(B(B==1)),5000-1)isequal(length(random_digits_indices(random_digits_indices==5000)),length(B(B==0)),1)isequal(length(random_digits_indices(random_digits_indices>5000)),0)random_digits_indices = random_digits_indices(1:100);C=randperm(10);isequal(length(C(C<=10&C>=1)),10)#Element-by-element Boolean Operatorsisequal(length(random_digits_indices(random_digits_indices<=5000&random_digits_indices>=1)),100)isequal(size(X(random_digits_indices, :)),[100 400])#Query or set the current colormapcolor_map=colormap();isequal(columns(color_map),3)#The colormap should be an n row by 3 column matrix#All entries must be between 0 and 1 inclusiveisequal(numel(color_map(color_map>=0&color_map<=1)),numel(color_map),192)#colormap traversing black to white in shades of gray.colormap(gray)isequal(any(color_map!=colormap()),[0 0 0])isequal(-ones(2,2),[-1 -1;-1 -1])#Return a matrix with the specified dimensions (m, n, …) whose elements are taken from the matrix A.m=1;n=4;A=ones(2,2);isequal(reshape(A,m,n),ones(m,n),[1 1 1 1])#Display a scaled version of the matrix img as a color image.#assert(h = imagesc(ones(2,2), [-1 1]),-118,1)% Do not show axis# : axis (option1, option2, …)#  Set axis limits and appearance. #"image": Equivalent to "tight" and "equal". #"tight": Fix axes to the limits of the data. #"equal": Force x-axis unit distance to equal y-axis (and z-axis) unit distance. #"off": Hide the axes.axis image off#Update figure windows and their children. drawnow#Function Filesisequal(mfilename (),'neural-network')isequal(  ignore_function_time_stamp (),'system')isequal(  typeinfo(path),'sq_string')#By default the load path contains a list of directories distributed with Octave plus the current working directory.#It is possible to add or remove directories to or from the load path using addpath and rmpath.#addpath (dir1, . . . ): Add named directories to the function search path.#addpath('/Users/zhanghongliang/Documents/machine-learning-octave/neural-network')layers=[400;25;10];epsilon=.12;nn_params = nn_params_init (layers,epsilon);isequal(size(nn_params),[1 2])L_in =  400;L_out =  25;L_in1 =  25;L_out1 =  10;assert(nn_params{1},rand(L_out, L_in + 1) * 2 * epsilon - epsilon,1)A={};A(1)=rand(L_out, L_in + 1) * 2 * epsilon - epsilon;A(2)=rand(L_out1, L_in1 + 1) * 2 * epsilon - epsilon;assert(nn_params,A,1)nn_params_unrolled_initial = unroll(nn_params);assert(columns(nn_params_unrolled_initial),1)isequal(numel(nn_params_unrolled_initial),numel(nn_params{1})+numel(nn_params{2}),10285)